apply plugin: 'com.android.library'

/**
 * Extra properties used by the project.
 */
ext {
    // String property to store version name.
    stringVersion = "1.1.0"
    // String property used to set the name of the Jar created by makeJar task.
    stringJarName = 'ChartboostAdapter.jar'
    // String property used to set the name of the archive created by makeZip
    // task.
    stringZipName = 'AdapterChartboostAndroid-' + stringVersion
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName stringVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.gms:play-services-ads:8.4.0'
}

/**
 * Delete task to delete any previously generated .jar files by makeJar task.
 * makeJar depends on this task.
 */
task clearJar(type: Delete) {
    // Targets to be deleted.
    delete('build/libs/' + stringJarName)
}

/**
 * Copy task used to copy the build files. This task depends on clearJar and
 * build tasks.
 */
task makeJar(type: Copy) {
    // Targets to be copied from.
    from('build/intermediates/bundles/release/')
    // Targets to copy into.
    into('build/libs/')
    // Files to include.
    include('classes.jar')
    // Rename file.
    rename('classes.jar', stringJarName)
}

/**
 * Add dependency tasks for makeJar.
 */
makeJar.dependsOn(clearJar, build)

/**
 * Delete task to delete any previously generated .zip files by makeZip task.
 * makeZip depends on this task.
 */
task clearZip(type: Delete) {
    // Targets to be deleted.
    delete('build/libs/' + stringZipName + '.zip')
}

/**
 * Zip task to make a zip archive. This task depends on makeJar and clearZip
 * tasks.
 */
task makeZip(type: Zip) {
    // Targets to be added to the zip archive.
    from('build/libs/' + stringJarName, '../README.txt', '../CHANGELOG.txt')
    // Root directory name for the zip archive.
    into(stringZipName)
    // Name of the zip archive.
    archiveName stringZipName + '.zip'
    // Destination directory in which the archive needs to be saved.
    destinationDir file('build/libs')
}

/**
 * Add dependency tasks for makeZip.
 */
makeZip.dependsOn(makeJar, clearZip)
